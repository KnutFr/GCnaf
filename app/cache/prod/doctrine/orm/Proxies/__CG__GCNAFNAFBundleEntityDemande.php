<?php

namespace Proxies\__CG__\GCNAF\NAFBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Demande extends \GCNAF\NAFBundle\Entity\Demande implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'idDem', 'dateD', 'dateF', 'nbrJr', 'msg', 'deMidi', 'jsqMidi', 'idCng', 'idEtat', 'idUser', 'validateur', 'dateVal', 'dateEnrg');
        }

        return array('__isInitialized__', 'idDem', 'dateD', 'dateF', 'nbrJr', 'msg', 'deMidi', 'jsqMidi', 'idCng', 'idEtat', 'idUser', 'validateur', 'dateVal', 'dateEnrg');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Demande $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdDem()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdDem();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdDem', array());

        return parent::getIdDem();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateD($dateD)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateD', array($dateD));

        return parent::setDateD($dateD);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateD()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateD', array());

        return parent::getDateD();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateF($dateF)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateF', array($dateF));

        return parent::setDateF($dateF);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateF()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateF', array());

        return parent::getDateF();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbrJr($nbrJr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbrJr', array($nbrJr));

        return parent::setNbrJr($nbrJr);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbrJr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbrJr', array());

        return parent::getNbrJr();
    }

    /**
     * {@inheritDoc}
     */
    public function setMsg($msg)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMsg', array($msg));

        return parent::setMsg($msg);
    }

    /**
     * {@inheritDoc}
     */
    public function getMsg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMsg', array());

        return parent::getMsg();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeMidi($deMidi)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeMidi', array($deMidi));

        return parent::setDeMidi($deMidi);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeMidi()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeMidi', array());

        return parent::getDeMidi();
    }

    /**
     * {@inheritDoc}
     */
    public function setJsqMidi($jsqMidi)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJsqMidi', array($jsqMidi));

        return parent::setJsqMidi($jsqMidi);
    }

    /**
     * {@inheritDoc}
     */
    public function getJsqMidi()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJsqMidi', array());

        return parent::getJsqMidi();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdCng($idCng)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdCng', array($idCng));

        return parent::setIdCng($idCng);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdCng()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdCng', array());

        return parent::getIdCng();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdEtat($idEtat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdEtat', array($idEtat));

        return parent::setIdEtat($idEtat);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdEtat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdEtat', array());

        return parent::getIdEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdUser($idUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdUser', array($idUser));

        return parent::setIdUser($idUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdUser', array());

        return parent::getIdUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setValidateur($validateur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValidateur', array($validateur));

        return parent::setValidateur($validateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidateur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidateur', array());

        return parent::getValidateur();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateVal($dateVal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateVal', array($dateVal));

        return parent::setDateVal($dateVal);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateVal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateVal', array());

        return parent::getDateVal();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEnrg($dateEnrg)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEnrg', array($dateEnrg));

        return parent::setDateEnrg($dateEnrg);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEnrg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEnrg', array());

        return parent::getDateEnrg();
    }

}
